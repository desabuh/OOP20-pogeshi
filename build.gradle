plugins {
  id 'application'
  id 'eclipse'
  id 'java'
 /*
  * Adds tasks to export a runnable jar.
  * In order to create it, launch the "shadowJar" task.
  * The runnable jar will be found in build/libs/projectname-all.jar
  */
  id 'com.github.johnrengelman.shadow' version '5.2.0'
}

def supportedPlatforms = ['linux', 'mac', 'win']
// List of JavaFX modules you need. Comment out things you are not using.
def javaFXModules = [
    'base',
    'controls',
    'fxml',
    'swing',
    'graphics'
]

sourceSets {
  main {
	  resources {
		  srcDir('res')
	  }
  }
}

jar {
	manifest {
		attributes 'Main-Class' : "application.Launcher"
	}

	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
}


repositories {
    jcenter()
}

dependencies {
	implementation 'com.google.code.gson:gson:2.8.6'
	implementation 'com.google.inject:guice:5.0.0-BETA-1'
	testImplementation(platform('org.junit:junit-bom:5.7.1'))
	testImplementation('org.junit.jupiter:junit-jupiter')
	for (platform in supportedPlatforms) {
        for (module in javaFXModules) {
            implementation 'org.openjfx:javafx-' + module + ':13:' + platform
        }
    }
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

task runJar(type: JavaExec) {
	main = "-jar";
	args jar.archiveFile.get()
}

mainClassName = 'application.Launcher'

